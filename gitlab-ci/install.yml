install-root:
  stage: .pre # always first, no matter if it is listed in stages
  rules:
    - changes:
      - package-lock.json
  cache:
    - !reference [.shared_config, cache, npm]
    - key:
        files:
          - package-lock.json
        prefix: node_modules_root
      paths:
        - node_modules/
      when: on_success
      policy: pull-push
  script:
    - if ! [[ -d node_modules ]]; then npm ci --cache .npm --prefer-offline; fi

install-backend:
  stage: .pre # always first, no matter if it is listed in stages
  rules:
    - changes:
      - backend/package-lock.json
  cache:
    - !reference [.shared_config, cache, npm]
    - key:
        files:
          - backend/package-lock.json
        prefix: node_modules_backend
      paths:
        - backend/node_modules/
      when: on_success
      policy: pull-push
  script:
    - cd backend
    - if ! [[ -d node_modules ]]; then npm ci --cache ../.npm --prefer-offline; fi

install-frontend:
  stage: .pre # always first, no matter if it is listed in stages
  rules:
    - changes:
      - frontend/package-lock.json
  cache:
    - !reference [.shared_config, cache, npm]
    - key:
        files:
          - frontend/package-lock.json
        prefix: node_modules_frontend
      paths:
        - frontend/node_modules/
      when: on_success
      policy: pull-push
  script:
    - cd frontend
    - if ! [[ -d node_modules ]]; then npm ci --cache ../.npm --prefer-offline; fi
